{"name":"Hamcrest","tagline":"Hamcrest is a library of matchers, which can be combined in to create flexible expressions of intent in tests. ","body":"Hamcrest是Java社区一个轻量级的，可扩展的Matcher框架，曾被Kent Beck引入到JUnit框架中，用于增强断言的机制。Magellan引入了Hamcrest的设计，实现了一个C\\+\\+移植版本的Hamcrest，使得Magellang的断言更加具有扩展性和可读性。\r\n\r\n## anything\r\n\r\n| 匹配器         | 说明           |\r\n| ------------- |---------------|\r\n| anything      | 总是匹配       |\r\n| _             | anything语法糖 |\r\n\r\n```cpp\r\n#include <magellan/magellan.hpp>\r\n\r\nUSING_HAMCREST_NS\r\n\r\nFIXTURE(AnythingTest)\r\n{\r\n    TEST(\"should always be matched\")\r\n    {\r\n        ASSERT_THAT(1, anything<int>());\r\n        ASSERT_THAT(1u, anything<unsigned int>());\r\n        ASSERT_THAT(1.0, anything<double>());\r\n        ASSERT_THAT(1.0f, anything<float>());\r\n        ASSERT_THAT(false, anything<bool>());\r\n        ASSERT_THAT(true, anything<bool>());\r\n        ASSERT_THAT(nullptr, anything<std::nullptr_t>());\r\n    }\r\n\r\n    TEST(\"should support _ as syntactic sugar\")\r\n    {\r\n        ASSERT_THAT(1u, _(int));\r\n        ASSERT_THAT(1.0f, _(float));\r\n        ASSERT_THAT(false, _(int));\r\n        ASSERT_THAT(nullptr, _(std::nullptr_t));\r\n    }\r\n};\r\n```\r\n\r\n## 比较器\r\n\r\n| 匹配器         | 说明            |\r\n| ------------- |----------------|\r\n| eq      \t\t| 相等       \t\t|\r\n| ne      \t\t| 不相等          |\r\n| lt      \t\t| 小于       \t\t|\r\n| gt      \t\t| 大于       \t\t|\r\n| le      \t\t| 小于或等于       |\r\n| ge      \t\t| 大于或等于       |\r\n\r\n```cpp\r\n#include <magellan/magellan.hpp>\r\n\r\nUSING_HAMCREST_NS\r\n\r\nFIXTURE(EqualToTest)\r\n{\r\n    TEST(\"should allow compare to integer\")\r\n    {\r\n        ASSERT_THAT(0xFF, eq(0xFF));\r\n        ASSERT_THAT(0xFF, is(eq(0xFF)));\r\n\r\n        ASSERT_THAT(0xFF, is(0xFF));\r\n        ASSERT_THAT(0xFF == 0xFF, is(true));\r\n    }\r\n\r\n    TEST(\"should allow compare to bool\")\r\n    {\r\n        ASSERT_THAT(true, eq(true));\r\n        ASSERT_THAT(false, eq(false));\r\n    }\r\n\r\n    TEST(\"should allow compare to string\")\r\n    {\r\n        ASSERT_THAT(\"hello\", eq(\"hello\"));\r\n        ASSERT_THAT(\"hello\", eq(std::string(\"hello\")));\r\n        ASSERT_THAT(std::string(\"hello\"), eq(std::string(\"hello\")));\r\n    }\r\n};\r\n\r\nFIXTURE(NotEqualToTest)\r\n{\r\n    TEST(\"should allow compare to integer\")\r\n    {\r\n        ASSERT_THAT(0xFF, ne(0xEE));\r\n\r\n        ASSERT_THAT(0xFF, is_not(0xEE));\r\n        ASSERT_THAT(0xFF, is_not(eq(0xEE)));\r\n        ASSERT_THAT(0xFF != 0xEE, is(true));\r\n    }\r\n\r\n    TEST(\"should allow compare to boolean\")\r\n    {\r\n        ASSERT_THAT(true, ne(false));\r\n        ASSERT_THAT(false, ne(true));\r\n    }\r\n\r\n    TEST(\"should allow compare to string\")\r\n    {\r\n        ASSERT_THAT(\"hello\", ne(\"world\"));\r\n        ASSERT_THAT(\"hello\", ne(std::string(\"world\")));\r\n        ASSERT_THAT(std::string(\"hello\"), ne(std::string(\"world\")));\r\n    }\r\n};\r\n```\r\n\r\n## 修饰器\r\n\r\n| 匹配器         | 说明            |\r\n| ------------- |----------------|\r\n| is      \t\t| 可读性装饰器     |\r\n| is_not        | 可读性装饰器     |\r\n\r\n```cpp\r\n#include <magellan/magellan.hpp>\r\n\r\nUSING_HAMCREST_NS\r\n\r\nFIXTURE(IsNotTest)\r\n{\r\n    TEST(\"integer\")\r\n    {\r\n        ASSERT_THAT(0xFF, is_not(0xEE));\r\n        ASSERT_THAT(0xFF, is_not(eq(0xEE)));\r\n    }\r\n\r\n    TEST(\"string\")\r\n    {\r\n        ASSERT_THAT(\"hello\", is_not(\"world\"));\r\n        ASSERT_THAT(\"hello\", is_not(eq(\"world\")));\r\n\r\n        ASSERT_THAT(\"hello\", is_not(std::string(\"world\")));\r\n        ASSERT_THAT(std::string(\"hello\"), is_not(std::string(\"world\")));\r\n    }\r\n};\r\n```\r\n\r\n##  空指针\r\n\r\n| 匹配器         | 说明            |\r\n| ------------- |----------------|\r\n| nil      \t\t| 空指针          |\r\n\r\n```cpp\r\n#include <magellan/magellan.hpp>\r\n\r\nUSING_HAMCREST_NS\r\n\r\nFIXTURE(NilTest)\r\n{\r\n    TEST(\"equal_to\")\r\n    {\r\n        ASSERT_THAT(nullptr, eq(nullptr));\r\n        ASSERT_THAT(0, eq(NULL));\r\n        ASSERT_THAT(NULL, eq(NULL));\r\n        ASSERT_THAT(NULL, eq(0));\r\n    }\r\n\r\n    TEST(\"is\")\r\n    {\r\n        ASSERT_THAT(nullptr, is(nullptr));\r\n        ASSERT_THAT(nullptr, is(eq(nullptr)));\r\n\r\n        ASSERT_THAT(0, is(0));\r\n        ASSERT_THAT(NULL, is(NULL));\r\n        ASSERT_THAT(0, is(NULL));\r\n        ASSERT_THAT(NULL, is(0));\r\n    }\r\n\r\n    TEST(\"nil\")\r\n    {\r\n        ASSERT_THAT((void*)NULL, nil());\r\n        ASSERT_THAT((void*)0, nil());\r\n        ASSERT_THAT(nullptr, nil());\r\n    }\r\n};\r\n```\r\n\r\n## 字符串\r\n\r\n| 匹配器           \t\t      | 说明 \t\t\t\t          |\r\n| ----------------------------- |----------------------------|\r\n| contains_string               | 断言是否包含子串  \t\t    |\r\n| contains_string_ignoring_case | 忽略大小写，断言是否包含子      |\r\n| starts_with                   | 断言是否以该子串开头           |\r\n| starts_with_ignoring_case     | 忽略大小写，断言是否以该子串开头 |\r\n| ends_with                     | 断言是否以该子串结尾  \t\t   |\r\n| ends_with_ignoring_case       | 忽略大小写，断言是否以该子串结尾 |\r\n\r\n```cpp\r\n#include <magellan/magellan.hpp>\r\n\r\nUSING_HAMCREST_NS\r\n\r\nFIXTURE(StartsWithTest)\r\n{\r\n    TEST(\"case sensitive\")\r\n    {\r\n        ASSERT_THAT(\"ruby-cpp\", starts_with(\"ruby\"));\r\n        ASSERT_THAT(\"ruby-cpp\", is(starts_with(\"ruby\")));\r\n\r\n        ASSERT_THAT(std::string(\"ruby-cpp\"), starts_with(\"ruby\"));\r\n        ASSERT_THAT(\"ruby-cpp\", starts_with(std::string(\"ruby\")));\r\n        ASSERT_THAT(std::string(\"ruby-cpp\"), starts_with(std::string(\"ruby\")));\r\n    }\r\n\r\n    TEST(\"ignoring case\")\r\n    {\r\n        ASSERT_THAT(\"ruby-cpp\", starts_with_ignoring_case(\"Ruby\"));\r\n        ASSERT_THAT(\"ruby-cpp\", is(starts_with_ignoring_case(\"Ruby\")));\r\n\r\n        ASSERT_THAT(std::string(\"ruby-cpp\"), starts_with_ignoring_case(\"RUBY\"));\r\n        ASSERT_THAT(\"Ruby-Cpp\", starts_with_ignoring_case(std::string(\"rUBY\")));\r\n        ASSERT_THAT(std::string(\"RUBY-CPP\"), starts_with_ignoring_case(std::string(\"ruby\")));\r\n    }\r\n};\r\n```\r\n\r\n## 浮点数\r\n\r\n| 匹配器    | 说明 \t\t\t\t   |\r\n| ---------|----------------------|\r\n| close_to | 断言浮点数近似等于  \t|\r\n| nan      | 断言浮点数不是一个数字   |\r\n\r\n```cpp\r\n#include <magellan/magellan.hpp>\r\n#include <math.h>\r\n\r\nUSING_HAMCREST_NS\r\n\r\nFIXTURE(IsNanTest)\r\n{\r\n    TEST(\"double\")\r\n    {\r\n        ASSERT_THAT(sqrt(-1.0), nan());\r\n        ASSERT_THAT(sqrt(-1.0), is(nan()));\r\n\r\n        ASSERT_THAT(1.0/0.0,  is_not(nan()));\r\n        ASSERT_THAT(-1.0/0.0, is_not(nan()));\r\n    }\r\n};\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}